<Blank>:
    Label: 
        center: root.center 
        text: root.label

<Conditional>: 
    canvas: 
        Color: 
            rgba: root.line_color
        Line: 
            width: 2.
            points: (self.center_x, self.y, self.x, self.center_y, self.center_x, self.y + self.height, self.x + self.width, self.center_y)
            close: True
    Label: 
        center: root.center 
        text: root.label

<Statement>:
    canvas: 
        Color: 
            rgba: root.line_color
        Line: 
            width: 2.
            rectangle: (self.x, self.y, self.width, self.height)
    Label: 
        center: root.center 
        text: root.label

<UpArrow>:
    canvas: 
        Color: 
            rgba: root.line_color
        Line: 
            width: 2.
            points:
                (self.x, self.y,
                self.center_x, self.y + self.height,
                self.x + self.width, self.y)

<DownArrow>:
    canvas: 
        Color: 
            rgba: root.line_color
        Line: 
            width: 2.
            points:
                (self.x, self.y + self.height,
                self.center_x, self.y,
                self.x + self.width, self.y + self.height)

<LeftArrow>:
    canvas: 
        Color: 
            rgba: root.line_color
        Line: 
            width: 2.
            points:
                (self.x + self.width, self.y + self.height,
                self.x, self.center_y,
                self.x + self.width, self.y)

<RightArrow>:
    canvas: 
        Color: 
            rgba: root.line_color
        Line: 
            width: 2.
            points:
                (self.x, self.y + self.height,
                self.x + self.width, self.center_y,
                self.x, self.y)

<HorizontalLine>:
    canvas: 
        Color: 
            rgba: root.line_color
        Line: 
            width: 2.
            points: (self.x, self.center_y, self.x + self.width, self.center_y)

<VerticalLine>:
    canvas: 
        Color: 
            rgba: root.line_color
        Line: 
            width: 2.
            points: (self.center_x, self.y, self.center_x, self.y + self.height)

<Connector>:
    VerticalLine:
        line_color: (root.line_color[0], root.line_color[1], root.line_color[2], 1 if root.line_n else 0)
        x: root.x
        y: root.center_y
        size: (root.width, root.height / 2)
    VerticalLine:
        line_color: (root.line_color[0], root.line_color[1], root.line_color[2], 1 if root.line_s else 0)
        x: root.x
        y: root.y
        size: (root.width, root.height / 2)
    HorizontalLine:
        line_color: (root.line_color[0], root.line_color[1], root.line_color[2], 1 if root.line_e else 0)
        x: root.center_x
        y: root.y
        size: (root.width / 2, root.height)
    HorizontalLine:
        line_color: (root.line_color[0], root.line_color[1], root.line_color[2], 1 if root.line_w else 0)
        x: root.x
        y: root.y
        size: (root.width / 2, root.height)
    UpArrow:
        line_color: (root.line_color[0], root.line_color[1], root.line_color[2], 1 if root.arrow_n else 0)
        center_x: root.center_x
        y: root.y + root.height - self.height
        size: (16, 8)
    DownArrow:
        line_color: (root.line_color[0], root.line_color[1], root.line_color[2], 1 if root.arrow_s else 0)
        center_x: root.center_x
        y: root.y
        size: (16, 8)
    RightArrow:
        line_color: (root.line_color[0], root.line_color[1], root.line_color[2], 1 if root.arrow_e else 0)
        x: root.x + root.width - self.width
        center_y: root.center_y
        size: (8, 16)
    LeftArrow:
        line_color: (root.line_color[0], root.line_color[1], root.line_color[2], 1 if root.arrow_w else 0)
        x: root.x
        center_y: root.center_y
        size: (8, 16)
    Label:
        center: root.center
        text: root.label

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: './'
            filters: ['*.cp']
            on_submit: root.load(filechooser.path, filechooser.selection)

        BoxLayout:
            size_hint_y: None
            height: 30
            ButtonM:
                text: "Cancel"
                on_release: root.cancel()
            ButtonM:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: './'
            filters: ['*.cp']
            on_selection: text_input.text = self.selection and self.selection[0] or ''
            on_submit: root.save(filechooser.path, text_input.text)

        TextInputM:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False
            on_text_validate: root.save(filechooser.path, text_input.text)

        BoxLayout:
            size_hint_y: None
            height: 30
            ButtonM:
                text: "Cancel"
                on_release: root.cancel()

            ButtonM:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)

<MainWindow>:

    text_input: text_input
    tape_input: tape_input

    BoxLayout:
        orientation: "horizontal"
        size: root.width, root.height

        # CP GUI Interface
        BoxLayout:
            orientation: "vertical"
            size_hint: None, None
            size: root.width * 0.67 - 1, root.height

            AnchorLayout:
                Label:
                    text: 'Simulator:'
                    size_hint: None, None
                    size: root.width * 0.67 - 1, root.height * 0.05
                    valign: "bottom"

            BoxLayout:
                # tape input
                size_hint: 0.4, None
                size: root.width * 0.67 - 1, root.height * 0.05 - 1
                AnchorLayout:
                    size_hint: None, None
                    size: root.width * 0.21, root.height * 0.05

                    Label:
                        text: 'Tape Input: '
                        size_hint: None, None
                        text_size: self.size
                        size: root.width * 0.21, root.height * 0.05
                        halign: 'right'
                        valign: 'middle'

                TextInputM:
                    id: tape_input

                    hint_text: '0,0,0,0,0,...'
                    size_hint: None, None
                    pos_hint: {'x': 0, 'y': 0.15}
                    size: root.width * 0.3, root.height * 0.035
                    padding: [6, (self.height - self.line_height)/2]
                    multiline: False
                    on_text: root.on_text(tape_input.text)

                    lexer: root.CPLexer()
                    style: root.GruvboxStyle
                    background_color: (0.16, 0.16, 0.16, 1)
                    foreground_color: (0.8, 0.8, 0.8, 1)

            Widget:
                size_hint: None, None
                size: root.width * 0.67 - 1, 2

                canvas:
                    Color:
                        rgba: 0.6, 0.6, 0.6, 0.9
                    Rectangle:
                        pos: self.x, self.y
                        size: self.width,2

            BoxLayout:
                id: flowchart
                pos_hint: {'x': 0, 'y': .1}
                size_hint: None, None
                size: root.width * 0.67 - 1, root.height * 0.75 - 2

            Widget:
                size_hint: None, None
                size: root.width * 0.67 - 1, 2

                canvas:
                    Color:
                        rgba: 0.6, 0.6, 0.6, 0.9
                    Rectangle:
                        pos: self.x, self.y
                        size: self.width,2

            BoxLayout:
                # counter tape
                id: counter_tape
                size_hint: None, None
                size: root.width * 0.67 - 1, root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[0]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[0]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[1]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[1]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[2]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[2]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[3]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[3]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[4]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[4]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[5]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[5]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[6]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[6]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[7]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[7]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[8]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[8]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[9]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[9]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[10]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[10]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[11]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[11]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[12]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[12]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[13]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[13]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[14]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[14]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[15]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[15]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[16]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[16]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[17]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[17]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[18]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[18]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[19]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[19]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[20]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[20]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[21]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[21]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[22]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[22]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[23]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[23]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[24]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[24]/root.counter_list_total_len_soft), root.height * 0.05 - 2

                Label:
                    text: root.counter_list_str[25]
                    font_size: 22
                    size_hint: None, None
                    size_hint: None, None
                    size: root.width * 0.67 * (root.counter_list_len_soft[25]/root.counter_list_total_len_soft), root.height * 0.05 - 2


            Widget:
                size_hint: None, None
                size: root.width * 0.67 - 1, 2

                canvas:
                    Color:
                        rgba: 0.6, 0.6, 0.6, 0.9
                    Rectangle:
                        pos: self.x, self.y
                        size: self.width,2

            BoxLayout:
                orientation: "horizontal"
                size_hint: None, None
                size: root.width * 0.67 - 1, root.height * 0.091 + 10

                BoxLayout:
                    # this is a spacer
                    size_hint: None, None
                    size: root.width * 0.67 * 0.003 - 1, root.height * 0.097 - 1

                GridLayout:
                    cols: 2
                    size_hint: None, None
                    size: root.width * 0.67 * 0.334 - 1, root.height * 0.097 - 1

                    AnchorLayout:
                        ButtonM:
                            text: "Pause" if root.running else "Run"
                            size_hint: 0.95, 0.8
                            on_release: root.run_or_pause_counter_program()
                            disabled: not root.step_state

                    AnchorLayout:
                        ButtonM:
                            text: "Reset"
                            size_hint: 0.95, 0.8
                            on_release: root.reset_all()

                    AnchorLayout:
                        size: root.width * 0.67 * 0.335 * 0.2 - 1, root.height * 0.097 * 0.5 - 1
                        Label:
                            text: " Delay (s)"
                            size_hint: None, None
                            text_size: self.size
                            pos_hint: {'x': 0, 'y': 0.15}
                            halign: 'center'
                            valign: 'middle'

                    AnchorLayout:
                        TextInputM:
                            text: "0.1"
                            size_hint: None, None
                            pos_hint: {'x': 0, 'y': 0.15}
                            multiline: False
                            size: root.width * 0.67 * 0.335 * 0.474 - 1, root.height * 0.035 - 1
                            on_text: root.update_delay(self.text)

                            lexer: root.CPLexer()
                            style: root.GruvboxStyle
                            background_color: (0.16, 0.16, 0.16, 1)
                            foreground_color: (0.8, 0.8, 0.8, 1)



                BoxLayout:
                    orientation: "vertical"
                    size_hint: None, None
                    size: root.width * 0.67 * 0.33 - 1, root.height * 0.097 - 1

                    AnchorLayout:
                        ButtonM:
                            text: "Step"
                            size_hint: 0.95 * 0.5, 0.8
                            on_release: root.step_counter_program()
                            disabled: not root.step_state or root.running

                    AnchorLayout:
                        ButtonM:
                            text: "Step Back"
                            size_hint: 0.95 * 0.5, 0.8
                            disabled: root.counter_program_step_count == 0
                            on_release: root.step_back_counter_program()

                BoxLayout:
                    orientation: "vertical"
                    size_hint: None, None
                    size: root.width * 0.67 * 0.333 - 1, root.height * 0.097 - 1

                    Label:
                        id: state_display
                        text: "State: " + str(root.counter_program_step)
                    Label:
                        text: "Step: " + str(root.counter_program_step_count)

            BoxLayout:
                # this is a spacer
                size_hint: None, None
                size: root.width * 0.67 - 1, root.height * 0.003 - 1

        #spacer line
        Widget:
            size_hint: None, None
            size: 2, root.height

            canvas:
                Color:
                    rgba: 0.6, 0.6, 0.6, 0.9
                Rectangle:
                    pos: self.x, self.y
                    size: 2,self.height


        # CP Editor
        BoxLayout:
            orientation: "vertical"
            size_hint: None, None
            size: root.width * 0.33 - 1, root.height

            Label:
                text: 'Editor:'
                size_hint: None, None
                size: root.width * 0.33 - 1, root.height * 0.05

            AnchorLayout:
                CodeInputM:
                    id: text_input
                    text: ''
                    lexer: root.CPLexer()
                    style: root.GruvboxStyle
                    background_color: (0.16, 0.16, 0.16, 1)
                    foreground_color: (0, 0, 0, 1)
                    font_size: 14
                    font_name: 'FiraMono-Regular'
                    pos_hint: {'x': 0.025, 'y': 0.025}
                    size_hint: .95, .98
                    size: root.width * 0.33 - 1, root.height * 0.90

            BoxLayout:
                orientation: "horizontal"
                size_hint : None, None
                size: root.width * 0.33 - 1, root.height * 0.1

                AnchorLayout:
                    ButtonM:
                        text: 'Load'
                        size_hint: 0.6, 0.4
                        on_release: root.file_chooser()

                AnchorLayout:
                    ButtonM:
                        text: 'Save'
                        size_hint: 0.6, 0.4
                        on_release: root.file_saver()




